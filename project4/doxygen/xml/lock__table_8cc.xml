<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="lock__table_8cc" kind="file" language="C++">
    <compoundname>lock_table.cc</compoundname>
    <includes refid="lock__table_8h" local="yes">lock_table.h</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="1">
        <label>lock_table/src/lock_table.cc</label>
        <link refid="lock__table_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>map</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t *</type>
        <definition>pthread_mutex_t* lock_manager_mutex</definition>
        <argsstring></argsstring>
        <name>lock_manager_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lock_table/src/lock_table.cc" line="9" column="17" bodyfile="lock_table/src/lock_table.cc" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="group__LockManager_1gaf5f2110dffe331363ba6b82513e52508" kindref="member">LockLocation</ref>, <ref refid="structlock__t" kindref="compound">lock_t</ref> * &gt;</type>
        <definition>std::map&lt;LockLocation, lock_t*&gt; lock_instances</definition>
        <argsstring></argsstring>
        <name>lock_instances</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>change it to MAX_TABLE_INSTANCE </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lock_table/src/lock_table.cc" line="12" column="10" bodyfile="lock_table/src/lock_table.cc" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__LockManager_1ga4aad58cac7f9b8b3ca0ca20702118f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int init_lock_table</definition>
        <argsstring>()</argsstring>
        <name>init_lock_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lock_table/src/lock_table.cc" line="14" column="5" bodyfile="lock_table/src/lock_table.cc" bodystart="14" bodyend="18" declfile="lock_table/include/lock_table.h" declline="39" declcolumn="5"/>
        <references refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" compoundref="lock__table_8cc" startline="9">lock_manager_mutex</references>
      </memberdef>
      <memberdef kind="function" id="group__LockManager_1ga87ee1d6b81e043dce2334e15d452809a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlock__t" kindref="compound">lock_t</ref> *</type>
        <definition>lock_t * lock_acquire</definition>
        <argsstring>(int table_id, int64_t key)</argsstring>
        <name>lock_acquire</name>
        <param>
          <type>int</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lock_table/src/lock_table.cc" line="20" column="8" bodyfile="lock_table/src/lock_table.cc" bodystart="20" bodyend="61" declfile="lock_table/include/lock_table.h" declline="40" declcolumn="8"/>
        <references refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" compoundref="lock__table_8h" startline="18">lock_t::cond</references>
        <references refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" compoundref="lock__table_8cc" startline="12">lock_instances</references>
        <references refid="structlock__t_1ad8ed74cba38119a0781bc41994283f81" compoundref="lock__table_8h" startline="16">lock_t::lock_location</references>
        <references refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" compoundref="lock__table_8cc" startline="9">lock_manager_mutex</references>
        <references refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" compoundref="lock__table_8h" startline="21">lock_t::next</references>
        <references refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" compoundref="lock__table_8h" startline="20">lock_t::prev</references>
      </memberdef>
      <memberdef kind="function" id="group__LockManager_1ga511763d67b710979e7b37b771b225eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lock_release</definition>
        <argsstring>(lock_t *lock_obj)</argsstring>
        <name>lock_release</name>
        <param>
          <type><ref refid="structlock__t" kindref="compound">lock_t</ref> *</type>
          <declname>lock_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lock_table/src/lock_table.cc" line="63" column="5" bodyfile="lock_table/src/lock_table.cc" bodystart="63" bodyend="86" declfile="lock_table/include/lock_table.h" declline="41" declcolumn="5"/>
        <references refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" compoundref="lock__table_8h" startline="18">lock_t::cond</references>
        <references refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" compoundref="lock__table_8cc" startline="12">lock_instances</references>
        <references refid="structlock__t_1ad8ed74cba38119a0781bc41994283f81" compoundref="lock__table_8h" startline="16">lock_t::lock_location</references>
        <references refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" compoundref="lock__table_8cc" startline="9">lock_manager_mutex</references>
        <references refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" compoundref="lock__table_8h" startline="21">lock_t::next</references>
        <references refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" compoundref="lock__table_8h" startline="20">lock_t::prev</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lock_table.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" refkind="member"><highlight class="normal">pthread_mutex_t*<sp/><ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" refkind="member"><highlight class="normal">std::map&lt;LockLocation,<sp/>lock_t*&gt;<sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="group__LockManager_1ga4aad58cac7f9b8b3ca0ca20702118f59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__LockManager_1ga4aad58cac7f9b8b3ca0ca20702118f59" kindref="member">init_lock_table</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pthread_mutex_t;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>pthread_mutex_init(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="group__LockManager_1ga87ee1d6b81e043dce2334e15d452809a" refkind="member"><highlight class="normal"><ref refid="structlock__t" kindref="compound">lock_t</ref>*<sp/><ref refid="group__LockManager_1ga87ee1d6b81e043dce2334e15d452809a" kindref="member">lock_acquire</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_id,<sp/>int64_t<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="structlock__t" kindref="compound">lock_t</ref>*<sp/>lock_instance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__LockManager_1ga99b867034cd684f33dafabab4f9d587f" kindref="member">lock_t</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lock_location<sp/>=<sp/>std::make_pair(table_id,<sp/>key);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1ad8ed74cba38119a0781bc41994283f81" kindref="member">lock_location</ref><sp/>=<sp/>lock_location;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" kindref="member">prev</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>.find(lock_location)<sp/>==<sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pthread_cond_t;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(lock_instance-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>[lock_location]<sp/>=<sp/>lock_instance;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lock_instance;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structlock__t" kindref="compound">lock_t</ref>*<sp/>lock_tail<sp/>=<sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>[lock_location];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(lock_tail-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>lock_tail<sp/>=<sp/>lock_tail-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref><sp/>=<sp/>lock_tail-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>lock_instance-&gt;<ref refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" kindref="member">prev</ref><sp/>=<sp/>lock_tail;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>lock_tail-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref><sp/>=<sp/>lock_instance;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(lock_instance-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>,<sp/><ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lock_instance-&gt;<ref refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" kindref="member">prev</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lock_instance;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__LockManager_1ga511763d67b710979e7b37b771b225eac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__LockManager_1ga511763d67b710979e7b37b771b225eac" kindref="member">lock_release</ref>(<ref refid="structlock__t" kindref="compound">lock_t</ref>*<sp/>lock_obj)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lock_obj-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>.erase(lock_obj-&gt;<ref refid="structlock__t_1ad8ed74cba38119a0781bc41994283f81" kindref="member">lock_location</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_destroy(lock_obj-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lock_obj-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lock_obj;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="structlock__t" kindref="compound">lock_t</ref>*<sp/>next_lock<sp/>=<sp/>lock_obj-&gt;<ref refid="structlock__t_1a1a0e99d3e9b55a2675d1eb58c42dadb9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>next_lock-&gt;<ref refid="structlock__t_1ad5e1de98302d55d11c64dc7444c997c7" kindref="member">prev</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="group__LockManager_1gae0e971999ddb588efe47de02740faa3b" kindref="member">lock_instances</ref>[lock_obj-&gt;<ref refid="structlock__t_1ad8ed74cba38119a0781bc41994283f81" kindref="member">lock_location</ref>]<sp/>=<sp/>next_lock;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lock_obj;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>pthread_cond_broadcast(next_lock-&gt;<ref refid="structlock__t_1a15cea7e8791a4ac3fbdc16fbc0fa3320" kindref="member">cond</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(<ref refid="group__LockManager_1gac4fc4496dd00eafd7c94794967f88aba" kindref="member">lock_manager_mutex</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lock_table/src/lock_table.cc"/>
  </compounddef>
</doxygen>
