<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespaceerror" kind="namespace" language="C++">
    <compoundname>error</compoundname>
    <innerclass refid="classerror_1_1Exception" prot="public">error::Exception</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceerror_1a07ce247c58709ae5dcc1ed9597926fa9" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int error::SILENT</definition>
        <argsstring></argsstring>
        <name>SILENT</name>
        <initializer>= 0x0001</initializer>
        <briefdescription>
<para>If set, ignore all other flags and just return quietly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="18" column="15" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceerror_1ab695e2ac067c537c81e892cb6f3f3eba" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int error::PRINT_ERROR</definition>
        <argsstring></argsstring>
        <name>PRINT_ERROR</name>
        <initializer>= 0x0002</initializer>
        <briefdescription>
<para>If set, print error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="20" column="15" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceerror_1a06b5fe5301a1fab2ad790e609caeebd5" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int error::THROW_EXCEPTION</definition>
        <argsstring></argsstring>
        <name>THROW_EXCEPTION</name>
        <initializer>= 0x0004</initializer>
        <briefdescription>
<para>If set, throw exception. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="22" column="15" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceerror_1ab7891d96d9ef415122d6bb4c1b9df417" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int error::EXIT_PROGRAM</definition>
        <argsstring></argsstring>
        <name>EXIT_PROGRAM</name>
        <initializer>= 0x0008</initializer>
        <briefdescription>
<para>If set, immediately exit program with exit(1);. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="24" column="15" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceerror_1a5f1d0a19754385c3275cde0d1c4b058d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int error::print</definition>
        <argsstring>(bool exit_flag=PRINT_ERROR)</argsstring>
        <name>print</name>
        <param>
          <type>bool</type>
          <declname>exit_flag</declname>
          <defval><ref refid="namespaceerror_1ab695e2ac067c537c81e892cb6f3f3eba" kindref="member">PRINT_ERROR</ref></defval>
        </param>
        <briefdescription>
<para>Print error message of errno and exit if flag is set. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>exit_flag == true</computeroutput>, print errno message and exit. If <computeroutput>exit_flag == false</computeroutput>, just print errno message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exit_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>if set to true, then print error message and terminate program with error code 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-errno for <computeroutput>return <ref refid="namespaceerror_1a5f1d0a19754385c3275cde0d1c4b058d" kindref="member">error::print()</ref>;</computeroutput> in some functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="50" column="12" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="50" bodyend="66"/>
        <references refid="namespaceerror_1ab7891d96d9ef415122d6bb4c1b9df417" compoundref="errors_8h" startline="24">EXIT_PROGRAM</references>
        <references refid="namespaceerror_1ab695e2ac067c537c81e892cb6f3f3eba" compoundref="errors_8h" startline="20">PRINT_ERROR</references>
        <references refid="namespaceerror_1a07ce247c58709ae5dcc1ed9597926fa9" compoundref="errors_8h" startline="18">SILENT</references>
        <references refid="namespaceerror_1a06b5fe5301a1fab2ad790e609caeebd5" compoundref="errors_8h" startline="22">THROW_EXCEPTION</references>
      </memberdef>
      <memberdef kind="function" id="namespaceerror_1a5785a46a2d7171d2954c349f640eb7eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool error::ok</definition>
        <argsstring>(bool assertion, bool exit_flag=THROW_EXCEPTION)</argsstring>
        <name>ok</name>
        <param>
          <type>bool</type>
          <declname>assertion</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exit_flag</declname>
          <defval><ref refid="namespaceerror_1a06b5fe5301a1fab2ad790e609caeebd5" kindref="member">THROW_EXCEPTION</ref></defval>
        </param>
        <briefdescription>
<para>If <computeroutput>assertion = false</computeroutput>, then throw error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assertion</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>assertion = true</computeroutput>, then return silently. if <computeroutput>assertion = false</computeroutput>, then process with <computeroutput>exit_flag</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exit_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>if set to true, then print error message and terminate program with error code 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if assertion success, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="77" column="13" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="77" bodyend="94"/>
        <references refid="namespaceerror_1ab7891d96d9ef415122d6bb4c1b9df417" compoundref="errors_8h" startline="24">EXIT_PROGRAM</references>
        <references refid="namespaceerror_1a5f1d0a19754385c3275cde0d1c4b058d" compoundref="errors_8h" startline="50" endline="66">print</references>
        <references refid="namespaceerror_1ab695e2ac067c537c81e892cb6f3f3eba" compoundref="errors_8h" startline="20">PRINT_ERROR</references>
        <references refid="namespaceerror_1a07ce247c58709ae5dcc1ed9597926fa9" compoundref="errors_8h" startline="18">SILENT</references>
        <references refid="namespaceerror_1a06b5fe5301a1fab2ad790e609caeebd5" compoundref="errors_8h" startline="22">THROW_EXCEPTION</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error. </para>
    </briefdescription>
    <detaileddescription>
<para>This namespace includes some useful functions which are used to print, handle an error(or even abort and exit). </para>
    </detaileddescription>
    <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="15" column="1"/>
  </compounddef>
</doxygen>
