<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classerror_1_1Exception" kind="class" language="C++" prot="public">
    <compoundname>error::Exception</compoundname>
    <includes local="no">errors.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classerror_1_1Exception_1a3e48bac71ae700781d4b15bcfa04ca0f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string error::Exception::error_message</definition>
        <argsstring></argsstring>
        <name>error_message</name>
        <briefdescription>
<para>exception message </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="29" column="17" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classerror_1_1Exception_1a97240bbb61582181e1feb1f97d689e26" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>error::Exception::Exception</definition>
        <argsstring>(const Exception &amp;rhs)</argsstring>
        <name>Exception</name>
        <param>
          <type>const <ref refid="classerror_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Make <ref refid="classerror_1_1Exception" kindref="compound">Exception</ref> noncopyable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerror_1_1Exception_1ad1c697bcf029ca57c3bba6e7f659a8e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classerror_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
        <definition>Exception &amp; error::Exception::operator=</definition>
        <argsstring>(const Exception &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classerror_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Make <ref refid="classerror_1_1Exception" kindref="compound">Exception</ref> noncopyable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="34" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classerror_1_1Exception_1a41b9e62f75deeaf8e8f2de7dd5f202d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>error::Exception::Exception</definition>
        <argsstring>(std::string message)</argsstring>
        <name>Exception</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="36" column="5" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classerror_1_1Exception_1a1350d8f9d039facfd991b6782387eae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>error::Exception::~Exception</definition>
        <argsstring>()</argsstring>
        <name>~Exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="37" column="5" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="37" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" line="26" column="1" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/errors.h" bodystart="26" bodyend="38"/>
    <listofallmembers>
      <member refid="classerror_1_1Exception_1a3e48bac71ae700781d4b15bcfa04ca0f" prot="private" virt="non-virtual"><scope>error::Exception</scope><name>error_message</name></member>
      <member refid="classerror_1_1Exception_1a97240bbb61582181e1feb1f97d689e26" prot="private" virt="non-virtual"><scope>error::Exception</scope><name>Exception</name></member>
      <member refid="classerror_1_1Exception_1a41b9e62f75deeaf8e8f2de7dd5f202d8" prot="public" virt="non-virtual"><scope>error::Exception</scope><name>Exception</name></member>
      <member refid="classerror_1_1Exception_1ad1c697bcf029ca57c3bba6e7f659a8e6" prot="private" virt="non-virtual"><scope>error::Exception</scope><name>operator=</name></member>
      <member refid="classerror_1_1Exception_1a1350d8f9d039facfd991b6782387eae5" prot="public" virt="non-virtual"><scope>error::Exception</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
