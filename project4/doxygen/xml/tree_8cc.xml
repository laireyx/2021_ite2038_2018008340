<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="tree_8cc" kind="file" language="C++">
    <compoundname>tree.cc</compoundname>
    <includes refid="tree_8h" local="yes">tree.h</includes>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
    <includes refid="errors_8h" local="no">errors.h</includes>
    <includes refid="page_8h" local="no">page.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc</label>
        <link refid="tree_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t make_node</definition>
        <argsstring>(tableid_t table_id, pagenum_t parent_page_idx=0)</argsstring>
        <name>make_node</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>parent_page_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Allocate and make an internal page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>parent page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created page index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="15" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="15" bodyend="26" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="27" declcolumn="11"/>
        <references refid="group__BufferManager_1ga029e5567b5d7f1ebacd02e0769cbfd1f" compoundref="buffer_8cc" startline="197" endline="217">buffered_alloc_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" compoundref="page_8h" startline="72">PageHeader::is_leaf_page</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t make_leaf</definition>
        <argsstring>(tableid_t table_id, pagenum_t parent_page_idx=0)</argsstring>
        <name>make_leaf</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>parent_page_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Allocate and make a leaf page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>parent page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created page index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="28" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="28" bodyend="44" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="19" declcolumn="11"/>
        <references refid="group__BufferManager_1ga029e5567b5d7f1ebacd02e0769cbfd1f" compoundref="buffer_8cc" startline="197" endline="217">buffered_alloc_page</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="structPageHeader_1_1ReservedFooter_1a449cef91528e5426aec9c0d5b91805a8" compoundref="page_8h" startline="81">PageHeader::ReservedFooter::footer_1</references>
        <references refid="structPageHeader_1_1ReservedFooter_1a501b83aebe4bb2732b7f20ecc1fe95e9" compoundref="page_8h" startline="84">PageHeader::ReservedFooter::footer_2</references>
        <references refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" compoundref="page_8h" startline="72">PageHeader::is_leaf_page</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structPageHeader_1a23bd66b8517a497496740f0a44d47b8e">PageHeader::reserved_footer</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga7f5b23ae25e85ca7f7c1c2c3a1959520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t create_tree</definition>
        <argsstring>(tableid_t table_id, int64_t key, const char *value, uint16_t value_size)</argsstring>
        <name>create_tree</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value_size</declname>
        </param>
        <briefdescription>
<para>Create a new tree. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new leaf page for root page and set initial record.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>initial record key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>initial record value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>initial record value size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="46" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="46" bodyend="64" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="39" declcolumn="11"/>
        <references refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" compoundref="page_8cc" startline="44" endline="68">page_helper::add_leaf_value</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" compoundref="tree_8cc" startline="28" endline="44">make_leaf</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t find_leaf</definition>
        <argsstring>(tableid_t table_id, int64_t key)</argsstring>
        <name>find_leaf</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find a leaf node which contains given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key to query with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>page index if found. <computeroutput>0</computeroutput> if the key does not exist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="66" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="66" bodyend="95" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="50" declcolumn="11"/>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" compoundref="page_8h" startline="72">PageHeader::is_leaf_page</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool find_by_key</definition>
        <argsstring>(tableid_t table_id, int64_t key, char *value=nullptr, uint16_t *value_size=nullptr)</argsstring>
        <name>find_by_key</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>value_size</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Find a record with key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key to query with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>If the record is found successful, then this value is set to record value. Caller should allocate enough(MAX_VALUE_SIZE) memory for it. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>If the record is found successful, then this value is set to record size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if found successful. <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="97" column="6" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="97" bodyend="118" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="64" declcolumn="6"/>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" compoundref="tree_8cc" startline="66" endline="95">find_leaf</references>
        <references refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" compoundref="page_8cc" startline="14" endline="22">page_helper::get_leaf_value</references>
        <references refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" compoundref="page_8cc" startline="10" endline="12">page_helper::get_page_slot</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga8aa1b06a5d37b7e6495c16aa509248f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_into_new_root</definition>
        <argsstring>(tableid_t table_id, pagenum_t left_page_idx, int64_t key, pagenum_t right_page_idx)</argsstring>
        <name>insert_into_new_root</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>left_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="120" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="120" bodyend="148"/>
        <references refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" compoundref="page_8cc" startline="100" endline="111">page_helper::add_internal_key</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" compoundref="tree_8cc" startline="15" endline="26">make_node</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gad5d67b6847aac9f161d38a8572363fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_into_node</definition>
        <argsstring>(tableid_t table_id, pagenum_t parent_page_idx, pagenum_t left_page_idx, int64_t key, pagenum_t right_page_idx)</argsstring>
        <name>insert_into_node</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>parent_page_idx</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>left_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
<para>Insert a <computeroutput>(key, right_page_idx)</computeroutput> tuple in parent page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>parent page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>left page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key which means right page. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>right page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="150" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="150" bodyend="168" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="77" declcolumn="11"/>
        <references refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" compoundref="page_8cc" startline="100" endline="111">page_helper::add_internal_key</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga293e1f2e62b078152e0fa9cb73435e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_into_node_after_splitting</definition>
        <argsstring>(tableid_t table_id, pagenum_t parent_page_idx, int64_t key, pagenum_t right_page_idx)</argsstring>
        <name>insert_into_node_after_splitting</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>parent_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
<para>Insert a <computeroutput>(key, right_page_idx)</computeroutput> tuple in parent page, and split it into two pages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>parent page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key which means right page. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>right page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="170" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="170" bodyend="239" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="90" declcolumn="11"/>
        <references refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" compoundref="page_8cc" startline="100" endline="111">page_helper::add_internal_key</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" compoundref="tree_8cc" startline="241" endline="263">insert_into_parent</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" compoundref="tree_8cc" startline="15" endline="26">make_node</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_into_parent</definition>
        <argsstring>(tableid_t table_id, pagenum_t left_page_idx, int64_t key, pagenum_t right_page_idx)</argsstring>
        <name>insert_into_parent</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>left_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
<para>Choose right method between just inserting and <computeroutput>insert_into_node_after_splitting</computeroutput> and call it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>left page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key which means right page. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>right page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="241" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="241" bodyend="263" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="103" declcolumn="11"/>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__IndexManager_1ga8aa1b06a5d37b7e6495c16aa509248f9" compoundref="tree_8cc" startline="120" endline="148">insert_into_new_root</references>
        <references refid="group__IndexManager_1gad5d67b6847aac9f161d38a8572363fd2" compoundref="tree_8cc" startline="150" endline="168">insert_into_node</references>
        <references refid="group__IndexManager_1ga293e1f2e62b078152e0fa9cb73435e30" compoundref="tree_8cc" startline="170" endline="239">insert_into_node_after_splitting</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga9794a7e8cce57f0b121da8fc963e9d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_into_leaf_after_splitting</definition>
        <argsstring>(tableid_t table_id, pagenum_t leaf_page_idx, int64_t key, const char *value, uint16_t value_size)</argsstring>
        <name>insert_into_leaf_after_splitting</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>leaf_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value_size</declname>
        </param>
        <briefdescription>
<para>Insert <computeroutput>(key, value)</computeroutput>into leaf node and split it into two pages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leaf_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>leaf page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>record key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>record value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>record value size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="265" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="265" bodyend="341" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="116" declcolumn="11"/>
        <references refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" compoundref="page_8cc" startline="44" endline="68">page_helper::add_leaf_value</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" compoundref="page_8cc" startline="36" endline="38">page_helper::get_free_space</references>
        <references refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" compoundref="page_8cc" startline="14" endline="22">page_helper::get_leaf_value</references>
        <references refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" compoundref="page_8cc" startline="10" endline="12">page_helper::get_page_slot</references>
        <references refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" compoundref="page_8cc" startline="40" endline="42">page_helper::get_sibling_idx</references>
        <references refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" compoundref="tree_8cc" startline="241" endline="263">insert_into_parent</references>
        <references refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" compoundref="page_8h" startline="94">PageSlot::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" compoundref="tree_8cc" startline="28" endline="44">make_leaf</references>
        <references refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" compoundref="tree_8h" startline="10">MAX_VALUE_SIZE</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" compoundref="page_8h" startline="14">PAGE_HEADER_SIZE</references>
        <references refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" compoundref="page_8h" startline="11">PAGE_SIZE</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" compoundref="page_8h" startline="96">PageSlot::value_size</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga63fa3c205831c7f6803bab444d370c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t insert_node</definition>
        <argsstring>(tableid_t table_id, int64_t key, const char *value, uint16_t value_size)</argsstring>
        <name>insert_node</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value_size</declname>
        </param>
        <briefdescription>
<para>Find appropriate leaf page and insert a record into it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>record key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>record value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>record value size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="343" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="343" bodyend="417" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="130" declcolumn="11"/>
        <references refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" compoundref="page_8cc" startline="44" endline="68">page_helper::add_leaf_value</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1ga7f5b23ae25e85ca7f7c1c2c3a1959520" compoundref="tree_8cc" startline="46" endline="64">create_tree</references>
        <references refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" compoundref="tree_8cc" startline="97" endline="118">find_by_key</references>
        <references refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" compoundref="tree_8cc" startline="66" endline="95">find_leaf</references>
        <references refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" compoundref="page_8cc" startline="36" endline="38">page_helper::get_free_space</references>
        <references refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" compoundref="page_8cc" startline="14" endline="22">page_helper::get_leaf_value</references>
        <references refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" compoundref="page_8cc" startline="10" endline="12">page_helper::get_page_slot</references>
        <references refid="namespacepage__helper_1a26459fe64afd7eb1939844ffdd9255ba" compoundref="page_8cc" startline="31" endline="34">page_helper::has_enough_space</references>
        <references refid="group__IndexManager_1ga9794a7e8cce57f0b121da8fc963e9d81" compoundref="tree_8cc" startline="265" endline="341">insert_into_leaf_after_splitting</references>
        <references refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" compoundref="page_8h" startline="94">PageSlot::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" compoundref="tree_8h" startline="10">MAX_VALUE_SIZE</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" compoundref="page_8h" startline="14">PAGE_HEADER_SIZE</references>
        <references refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" compoundref="page_8h" startline="11">PAGE_SIZE</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
        <references refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" compoundref="page_8h" startline="96">PageSlot::value_size</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t adjust_root</definition>
        <argsstring>(tableid_t table_id)</argsstring>
        <name>adjust_root</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <briefdescription>
<para>Adjust root page. </para>
        </briefdescription>
        <detaileddescription>
<para>Pull up the child page if the root page is empty internal page. Or free the root page if it is empty leaf page.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>&gt;0</computeroutput> if succesful. <computeroutput>0</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="419" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="419" bodyend="459" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="142" declcolumn="11"/>
        <references refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" compoundref="buffer_8cc" startline="219" endline="236">buffered_free_page</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" compoundref="page_8h" startline="72">PageHeader::is_leaf_page</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t coalesce_internal_nodes</definition>
        <argsstring>(tableid_t table_id, pagenum_t left_page_idx, int64_t seperate_key, int seperate_key_idx, pagenum_t right_page_idx)</argsstring>
        <name>coalesce_internal_nodes</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>left_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>seperate_key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seperate_key_idx</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
<para>Coalesces two internal pages. </para>
        </briefdescription>
        <detaileddescription>
<para>Moves all right page branch into the left page.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>left page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seperate_key</parametername>
</parameternamelist>
<parameterdescription>
<para>key which can seperate between left and right page. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seperate_key_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>parent branch index of <computeroutput>seperate_key</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>right page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="461" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="461" bodyend="516" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="154" declcolumn="11"/>
        <references refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" compoundref="page_8cc" startline="100" endline="111">page_helper::add_internal_key</references>
        <references refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" compoundref="buffer_8cc" startline="219" endline="236">buffered_free_page</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" compoundref="tree_8cc" startline="560" endline="696">delete_internal_key</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t coalesce_leaf_nodes</definition>
        <argsstring>(tableid_t table_id, pagenum_t left_page_idx, pagenum_t right_page_idx)</argsstring>
        <name>coalesce_leaf_nodes</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>left_page_idx</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>right_page_idx</declname>
        </param>
        <briefdescription>
<para>Coalesces two leaf pages. </para>
        </briefdescription>
        <detaileddescription>
<para>Moves all right page record into the left page.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>left page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>right page index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="518" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="518" bodyend="558" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="167" declcolumn="11"/>
        <references refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" compoundref="page_8cc" startline="44" endline="68">page_helper::add_leaf_value</references>
        <references refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" compoundref="buffer_8cc" startline="219" endline="236">buffered_free_page</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" compoundref="tree_8cc" startline="560" endline="696">delete_internal_key</references>
        <references refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" compoundref="page_8cc" startline="14" endline="22">page_helper::get_leaf_value</references>
        <references refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" compoundref="page_8cc" startline="10" endline="12">page_helper::get_page_slot</references>
        <references refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" compoundref="page_8cc" startline="40" endline="42">page_helper::get_sibling_idx</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" compoundref="tree_8h" startline="10">MAX_VALUE_SIZE</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t delete_internal_key</definition>
        <argsstring>(tableid_t table_id, pagenum_t internal_page_idx, int64_t key)</argsstring>
        <name>delete_internal_key</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>internal_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Delete a page branch from internal page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>internal_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>internal page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>branch key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="560" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="560" bodyend="696" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="176" declcolumn="11"/>
        <references refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" compoundref="page_8cc" startline="100" endline="111">page_helper::add_internal_key</references>
        <references refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" compoundref="tree_8cc" startline="419" endline="459">adjust_root</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" compoundref="tree_8cc" startline="461" endline="516">coalesce_internal_nodes</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="namespacepage__helper_1afb596042de2e0d0b4efdc117e244a587" compoundref="page_8cc" startline="113" endline="129">page_helper::remove_internal_key</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1gaa4595019e4f6ce843b6d2d44c44c3b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t delete_leaf_key</definition>
        <argsstring>(tableid_t table_id, pagenum_t leaf_page_idx, int64_t key)</argsstring>
        <name>delete_leaf_key</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>pagenum_t</type>
          <declname>leaf_page_idx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Delete a record from leaf page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leaf_page_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>leaf page index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>record key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="698" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="698" bodyend="848" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="185" declcolumn="11"/>
        <references refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" compoundref="page_8cc" startline="44" endline="68">page_helper::add_leaf_value</references>
        <references refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" compoundref="tree_8cc" startline="419" endline="459">adjust_root</references>
        <references refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" compoundref="buffer_8cc" startline="238" endline="241">buffered_read_page</references>
        <references refid="group__BufferManager_1gad670dec3e27df044606af3c4282d97ba" compoundref="buffer_8cc" startline="248" endline="250">buffered_release_page</references>
        <references refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" compoundref="buffer_8cc" startline="243" endline="246">buffered_write_page</references>
        <references refid="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" compoundref="tree_8cc" startline="518" endline="558">coalesce_leaf_nodes</references>
        <references refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" compoundref="page_8cc" startline="36" endline="38">page_helper::get_free_space</references>
        <references refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" compoundref="page_8cc" startline="14" endline="22">page_helper::get_leaf_value</references>
        <references refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" compoundref="page_8cc" startline="131" endline="133">page_helper::get_leftmost_child_idx</references>
        <references refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" compoundref="page_8cc" startline="10" endline="12">page_helper::get_page_slot</references>
        <references refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" compoundref="page_8cc" startline="40" endline="42">page_helper::get_sibling_idx</references>
        <references refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" compoundref="page_8h" startline="94">PageSlot::key</references>
        <references refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" compoundref="page_8h" startline="107">PageBranch::key</references>
        <references refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" compoundref="page_8h" startline="74">PageHeader::key_num</references>
        <references refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" compoundref="tree_8h" startline="10">MAX_VALUE_SIZE</references>
        <references refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" compoundref="page_8h" startline="138">InternalPage::page_branches</references>
        <references refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" compoundref="page_8h" startline="118">AllocatedPage::page_header</references>
        <references refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" compoundref="page_8h" startline="14">PAGE_HEADER_SIZE</references>
        <references refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" compoundref="page_8h" startline="109">PageBranch::page_idx</references>
        <references refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" compoundref="page_8h" startline="11">PAGE_SIZE</references>
        <references refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" compoundref="page_8h" startline="70">PageHeader::parent_page_idx</references>
        <references refid="group__IndexManager_1gaeb24640d205c8fd9ec95cd0e8b99cc16" compoundref="tree_8h" startline="9">REDISTRIBUTE_THRESHOLD</references>
        <references refid="namespacepage__helper_1a46a6aea7dd6f29cd79ad905d94f748df" compoundref="page_8cc" startline="70" endline="98">page_helper::remove_leaf_value</references>
        <references refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" compoundref="page_8h" startline="46">HeaderPage::root_page_idx</references>
        <references refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" compoundref="page_8h" startline="96">PageSlot::value_size</references>
      </memberdef>
      <memberdef kind="function" id="group__IndexManager_1ga157da10a1b39d539647c22ca891e1a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pagenum_t</type>
        <definition>pagenum_t delete_node</definition>
        <argsstring>(tableid_t table_id, int64_t key)</argsstring>
        <name>delete_node</name>
        <param>
          <type>tableid_t</type>
          <declname>table_id</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Entrance for remove a record from table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>table id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>record key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root page number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" line="850" column="11" bodyfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc" bodystart="850" bodyend="859" declfile="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/include/tree.h" declline="193" declcolumn="11"/>
        <references refid="group__IndexManager_1gaa4595019e4f6ce843b6d2d44c44c3b1f" compoundref="tree_8cc" startline="698" endline="848">delete_leaf_key</references>
        <references refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" compoundref="tree_8cc" startline="97" endline="118">find_by_key</references>
        <references refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" compoundref="tree_8cc" startline="66" endline="95">find_leaf</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;buffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;page.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" kindref="member">make_node</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>parent_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>page<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>page_idx<sp/>=<sp/><ref refid="group__BufferManager_1ga029e5567b5d7f1ebacd02e0769cbfd1f" kindref="member">buffered_alloc_page</ref>(table_id);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" kindref="member">is_leaf_page</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>page_idx,<sp/>&amp;page);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page_idx;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" kindref="member">make_leaf</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>parent_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx<sp/>=<sp/><ref refid="group__BufferManager_1ga029e5567b5d7f1ebacd02e0769cbfd1f" kindref="member">buffered_alloc_page</ref>(table_id);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" kindref="member">is_leaf_page</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a23bd66b8517a497496740f0a44d47b8e" kindref="member">reserved_footer</ref>.<ref refid="structPageHeader_1_1ReservedFooter_1a449cef91528e5426aec9c0d5b91805a8" kindref="member">footer_1</ref><sp/>=<sp/>3968;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a23bd66b8517a497496740f0a44d47b8e" kindref="member">reserved_footer</ref>.<ref refid="structPageHeader_1_1ReservedFooter_1a501b83aebe4bb2732b7f20ecc1fe95e9" kindref="member">footer_2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__IndexManager_1ga7f5b23ae25e85ca7f7c1c2c3a1959520" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga7f5b23ae25e85ca7f7c1c2c3a1959520" kindref="member">create_tree</ref>(tableid_t<sp/>table_id,<sp/>int64_t<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value_size)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" kindref="member">make_leaf</ref>(table_id);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;leaf_page,<sp/>key,<sp/>value,<sp/>value_size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref><sp/>=<sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" kindref="member">find_leaf</ref>(tableid_t<sp/>table_id,<sp/>int64_t<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>current_page;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>current_page_idx<sp/>=<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!current_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>,<sp/>&amp;current_page,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!current_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" kindref="member">is_leaf_page</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>current_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>&lt;<sp/>current_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_page_idx<sp/>=<sp/>current_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_page_idx<sp/>=<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structInternalPage" kindref="compound">internalpage_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;current_page));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>current_page_idx,<sp/>&amp;current_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_page_idx;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" kindref="member">find_by_key</ref>(tableid_t<sp/>table_id,<sp/>int64_t<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>value_size)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" kindref="member">find_leaf</ref>(table_id,<sp/>key);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!leaf_page_idx)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>leaf_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaf_slot[i].key<sp/>==<sp/>key)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;leaf_page,<sp/>i,<sp/>value,<sp/>value_size);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__IndexManager_1ga8aa1b06a5d37b7e6495c16aa509248f9" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga8aa1b06a5d37b7e6495c16aa509248f9" kindref="member">insert_into_new_root</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>left_page_idx,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>key,<sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>left_page,<sp/>right_page;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>new_root_page;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>new_root_page_idx;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" kindref="member">make_node</ref>(table_id);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>new_root_page_idx,<sp/>&amp;new_root_page);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>right_page_idx,<sp/>&amp;right_page);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;new_root_page)<sp/>=<sp/>left_page_idx;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;new_root_page,<sp/>key,<sp/>right_page_idx);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>new_root_page_idx;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>right_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>new_root_page_idx;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>new_root_page_idx,<sp/>&amp;new_root_page);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>right_page_idx,<sp/>&amp;right_page);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref><sp/>=<sp/>new_root_page_idx;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_root_page_idx;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__IndexManager_1gad5d67b6847aac9f161d38a8572363fd2" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1gad5d67b6847aac9f161d38a8572363fd2" kindref="member">insert_into_node</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>parent_page_idx,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>left_page_idx,<sp/>int64_t<sp/>key,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>insert_position;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;parent_page,<sp/>key,<sp/>right_page_idx);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref><sp/>+<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPageBranch" kindref="compound">PageBranch</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPageBranch" kindref="compound">PageBranch</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a.key<sp/>&lt;<sp/>b.key;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group__IndexManager_1ga293e1f2e62b078152e0fa9cb73435e30" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga293e1f2e62b078152e0fa9cb73435e30" kindref="member">insert_into_node_after_splitting</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>page_idx,<sp/>int64_t<sp/>key,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>new_page_idx;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>page,<sp/>new_page;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>seperate_key;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PageBranch&gt;<sp/>temp_branches;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>page_idx,<sp/>&amp;page);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>new<sp/>node<sp/>and<sp/>copy</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>half<sp/>the<sp/>keys<sp/>and<sp/>pointers<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>old<sp/>and<sp/>half<sp/>to<sp/>the<sp/>new.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>new_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1ga6a8f95cf346bcbdd258f334bc61235c5" kindref="member">make_node</ref>(table_id,<sp/>page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>new_page_idx,<sp/>&amp;new_page);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>248;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_branches.push_back(page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageBranch" kindref="compound">PageBranch</ref><sp/>new_branch;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>new_branch.<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>new_branch.<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>=<sp/>right_page_idx;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_branches.push_back(new_branch);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(temp_branches.begin(),<sp/>temp_branches.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPageBranch" kindref="compound">PageBranch</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPageBranch" kindref="compound">PageBranch</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a.key<sp/>&lt;<sp/>b.key;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>124;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;page,<sp/>temp_branches[i].key,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_branches[i].page_idx);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>seperate_key<sp/>=<sp/>temp_branches[124].key;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;new_page)<sp/>=<sp/>temp_branches[124].page_idx;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>leftmost_child_page;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>temp_branches[124].page_idx,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>leftmost_child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>new_page_idx;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>temp_branches[124].page_idx,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>125;<sp/>i<sp/>&lt;<sp/>249;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>child_page;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;new_page,<sp/>temp_branches[i].key,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_branches[i].page_idx);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>temp_branches[i].page_idx,<sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>new_page_idx;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>temp_branches[i].page_idx,<sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>a<sp/>new<sp/>key<sp/>into<sp/>the<sp/>parent<sp/>of<sp/>the<sp/>two</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>nodes<sp/>resulting<sp/>from<sp/>the<sp/>split,<sp/>with</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>old<sp/>node<sp/>to<sp/>the<sp/>left<sp/>and<sp/>the<sp/>new<sp/>to<sp/>the<sp/>right.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>page_idx,<sp/>&amp;page);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>new_page_idx,<sp/>&amp;new_page);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" kindref="member">insert_into_parent</ref>(table_id,<sp/>page_idx,<sp/>seperate_key,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_page_idx);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" kindref="member">insert_into_parent</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>left_page_idx,<sp/>int64_t<sp/>key,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>left_page;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga8aa1b06a5d37b7e6495c16aa509248f9" kindref="member">insert_into_new_root</ref>(table_id,<sp/>left_page_idx,<sp/>key,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_page_idx);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_page_idx<sp/>=<sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&lt;<sp/>248)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gad5d67b6847aac9f161d38a8572363fd2" kindref="member">insert_into_node</ref>(table_id,<sp/>parent_page_idx,<sp/>left_page_idx,<sp/>key,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_page_idx);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga293e1f2e62b078152e0fa9cb73435e30" kindref="member">insert_into_node_after_splitting</ref>(table_id,<sp/>parent_page_idx,<sp/>key,<sp/>right_page_idx);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="group__IndexManager_1ga9794a7e8cce57f0b121da8fc963e9d81" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga9794a7e8cce57f0b121da8fc963e9d81" kindref="member">insert_into_leaf_after_splitting</ref>(tableid_t<sp/>table_id,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx,<sp/>int64_t<sp/>key,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value_size)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>new_key;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page,<sp/>new_leaf_page;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>new_leaf_page_idx;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>leaf_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_values_num<sp/>=<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>new_leaf_page_idx<sp/>=</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__IndexManager_1ga91d69759da2494ab633533d188795d6c" kindref="member">make_leaf</ref>(table_id,<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>new_leaf_page_idx,<sp/>&amp;new_leaf_page);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;leaf_page,<sp/>i,<sp/>temp_value);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.emplace_back(leaf_slot[i],<sp/>temp_value);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref><sp/>new_slot;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[value_size];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>new_slot.<ref refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>new_slot.<ref refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" kindref="member">value_size</ref><sp/>=<sp/>value_size;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(new_value,<sp/>value,<sp/>value_size);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.emplace_back(new_slot,<sp/>new_value);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(temp.begin(),<sp/>temp.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a.first.key<sp/>&lt;<sp/>b.first.key;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acc_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>split_start<sp/>&lt;<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>+<sp/>1;<sp/>split_start++)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc_len<sp/>+=<sp/>temp[split_start].first.value_size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structPageSlot" kindref="compound">PageSlot</ref>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acc_len<sp/>&gt;=<sp/>(<ref refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" kindref="member">PAGE_SIZE</ref><sp/>-<sp/><ref refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" kindref="member">PAGE_HEADER_SIZE</ref>)<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>=<sp/><ref refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" kindref="member">PAGE_SIZE</ref><sp/>-<sp/><ref refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" kindref="member">PAGE_HEADER_SIZE</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>split_start;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;leaf_page,<sp/>temp[i].first.key,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[i].second,<sp/>temp[i].first.value_size);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>new_key<sp/>=<sp/>temp[split_start].first.key;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>split_start;<sp/>i<sp/>&lt;<sp/>total_values_num;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;new_leaf_page,<sp/>temp[i].first.key,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[i].second,<sp/>temp[i].first.value_size);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>leaf_sibling_idx<sp/>=<sp/><ref refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" kindref="member">page_helper::get_sibling_idx</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t*<sp/>new_leaf_sibling_idx<sp/>=</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" kindref="member">page_helper::get_sibling_idx</ref>(&amp;new_leaf_page);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>*new_leaf_sibling_idx<sp/>=<sp/>*leaf_sibling_idx;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>*leaf_sibling_idx<sp/>=<sp/>new_leaf_page_idx;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>new_leaf_page_idx,<sp/>&amp;new_leaf_page);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>temp_pair<sp/>:<sp/>temp)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>temp_pair.second;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga32fecd671e5c5d37e32f290d4ce2ba35" kindref="member">insert_into_parent</ref>(table_id,<sp/>leaf_page_idx,<sp/>new_key,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_leaf_page_idx);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__IndexManager_1ga63fa3c205831c7f6803bab444d370c84" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga63fa3c205831c7f6803bab444d370c84" kindref="member">insert_node</ref>(tableid_t<sp/>table_id,<sp/>int64_t<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value_size)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>current<sp/>implementation<sp/>ignores</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>duplicates.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" kindref="member">find_by_key</ref>(table_id,<sp/>key))<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/>the<sp/>tree<sp/>does<sp/>not<sp/>exist<sp/>yet.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Start<sp/>a<sp/>new<sp/>tree.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga7f5b23ae25e85ca7f7c1c2c3a1959520" kindref="member">create_tree</ref>(table_id,<sp/>key,<sp/>value,<sp/>value_size);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/>the<sp/>tree<sp/>already<sp/>exists.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(Rest<sp/>of<sp/>function<sp/>body.)</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" kindref="member">find_leaf</ref>(table_id,<sp/>key);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/>leaf<sp/>has<sp/>room<sp/>for<sp/>key<sp/>and<sp/>pointer.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacepage__helper_1a26459fe64afd7eb1939844ffdd9255ba" kindref="member">page_helper::has_enough_space</ref>(&amp;leaf_page,<sp/>value_size))<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>leaf_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;leaf_page,<sp/>i,<sp/>temp_value);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.emplace_back(leaf_slot[i],<sp/>temp_value);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref><sp/>new_slot;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[value_size];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_slot.<ref refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_slot.<ref refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" kindref="member">value_size</ref><sp/>=<sp/>value_size;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(new_value,<sp/>value,<sp/>value_size);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.emplace_back(new_slot,<sp/>new_value);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(temp.begin(),<sp/>temp.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a.first.key<sp/>&lt;<sp/>b.first.key;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>=<sp/><ref refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" kindref="member">PAGE_SIZE</ref><sp/>-<sp/><ref refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" kindref="member">PAGE_HEADER_SIZE</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>temp_pair<sp/>:<sp/>temp)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;leaf_page,<sp/>temp_pair.first.key,<sp/>temp_pair.second,<sp/>temp_pair.first.value_size);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>temp_pair.second;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/><sp/>leaf<sp/>must<sp/>be<sp/>split.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga9794a7e8cce57f0b121da8fc963e9d81" kindref="member">insert_into_leaf_after_splitting</ref>(table_id,<sp/>leaf_page_idx,<sp/>key,<sp/>value,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_size);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" kindref="member">adjust_root</ref>(tableid_t<sp/>table_id)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>root_page,<sp/>new_root_page;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>,<sp/>&amp;root_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/>nonempty<sp/>root.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Key<sp/>and<sp/>pointer<sp/>have<sp/>already<sp/>been<sp/>deleted,</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>nothing<sp/>to<sp/>be<sp/>done.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Case:<sp/>empty<sp/>root.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>has<sp/>a<sp/>child,<sp/>promote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>(only)<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>new<sp/>root.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" kindref="member">buffered_free_page</ref>(table_id,<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!root_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1a9ba2743a65e47b648036ad18ed744cc5" kindref="member">is_leaf_page</ref>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref><sp/>=<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structInternalPage" kindref="compound">internalpage_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;root_page));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>,<sp/>&amp;new_root_page);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_root_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;new_root_page);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" kindref="member">coalesce_internal_nodes</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>left_page_idx,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>seperate_key,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seperate_key_idx,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>old_key;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>left_page,<sp/>right_page;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>child_page;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>right_slot;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>right_page_idx,<sp/>&amp;right_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;left_page,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;right_page));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;right_page),</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>left_page_idx;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;right_page),</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>right_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>child_page;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(&amp;left_page,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>right_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>left_page_idx;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>right_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;child_page);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" kindref="member">buffered_free_page</ref>(table_id,<sp/>right_page_idx);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>==<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" kindref="member">delete_internal_key</ref>(table_id,<sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" kindref="member">coalesce_leaf_nodes</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>left_page_idx,<sp/>pagenum_t<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>old_key;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>left_page,<sp/>right_page;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>right_slot;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>right_page_idx,<sp/>&amp;right_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;parent_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>a<sp/>leaf,<sp/>append<sp/>the<sp/>keys<sp/>and<sp/>pointers<sp/>of</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>n<sp/>to<sp/>the<sp/>neighbor.</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>the<sp/>neighbor&apos;s<sp/>last<sp/>pointer<sp/>to<sp/>point<sp/>to</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>what<sp/>had<sp/>been<sp/>n&apos;s<sp/>right<sp/>neighbor.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>right_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;right_page);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>right_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>right_slot_value[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;right_page,<sp/>i,<sp/>right_slot_value);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;left_page,<sp/>right_slot[i].key,<sp/>right_slot_value,<sp/>right_slot[i].value_size);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" kindref="member">page_helper::get_sibling_idx</ref>(&amp;left_page)<sp/>=<sp/>*<ref refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" kindref="member">page_helper::get_sibling_idx</ref>(&amp;right_page);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>left_page_idx,<sp/>&amp;left_page);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1gadeb4470c5495d5b66689f395a1603fb5" kindref="member">buffered_free_page</ref>(table_id,<sp/>right_page_idx);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>==<sp/>right_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" kindref="member">delete_internal_key</ref>(table_id,<sp/>left_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>,<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga759a320a32a9428ab452981665eb25be" kindref="member">delete_internal_key</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>internal_page_idx,<sp/>int64_t<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seperate_key_idx;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>seperate_key;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left_sibling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>sibling_page_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>internal_page,<sp/>sibling_page;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>internal_page_idx,<sp/>&amp;internal_page);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1afb596042de2e0d0b4efdc117e244a587" kindref="member">page_helper::remove_internal_key</ref>(&amp;internal_page,<sp/>key);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>internal_page_idx,<sp/>&amp;internal_page);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_page_idx<sp/>=<sp/>internal_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(internal_page_idx<sp/>==<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" kindref="member">adjust_root</ref>(table_id);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(internal_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&gt;=<sp/>124)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;parent_page)<sp/>==</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key<sp/>=<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>==<sp/>internal_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key<sp/>=<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i<sp/>+<sp/>1].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i<sp/>+<sp/>1].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling_page_idx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key<sp/>=<sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;parent_page);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key<sp/>=</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>2]</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_sibling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>sibling_page_idx,<sp/>&amp;sibling_page);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Coalescence.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(internal_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>+<sp/>sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&lt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>248)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_sibling)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" kindref="member">coalesce_internal_nodes</ref>(table_id,<sp/>internal_page_idx,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gaa8321b39d1e66e8bb83ccf0064034775" kindref="member">coalesce_internal_nodes</ref>(table_id,<sp/>sibling_page_idx,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page_idx);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structAllocatedFullPage" kindref="compound">allocatedpage_t</ref><sp/>leftmost_child_page;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_sibling)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[seperate_key_idx].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a9831b9695515a5c601a52d773b855e20" kindref="member">page_helper::add_internal_key</ref>(</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;internal_page,<sp/>seperate_key,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;sibling_page));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_id,<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;sibling_page),</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftmost_child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>internal_page_idx;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_id,<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;sibling_page),</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;sibling_page)<sp/>=<sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1afb596042de2e0d0b4efdc117e244a587" kindref="member">page_helper::remove_internal_key</ref>(&amp;sibling_page,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>internal_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i]<sp/>=</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=<sp/>seperate_key;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[0].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>=</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;internal_page);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>++;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[seperate_key_idx].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;internal_page)<sp/>=</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_id,<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;internal_page),</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftmost_child_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>=<sp/>internal_page_idx;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_id,<sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;internal_page),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftmost_child_page);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1afb596042de2e0d0b4efdc117e244a587" kindref="member">page_helper::remove_internal_key</ref>(</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sibling_page,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>internal_page_idx,<sp/>&amp;internal_page);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>sibling_page_idx,<sp/>&amp;sibling_page);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="group__IndexManager_1gaa4595019e4f6ce843b6d2d44c44c3b1f" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1gaa4595019e4f6ce843b6d2d44c44c3b1f" kindref="member">delete_leaf_key</ref>(tableid_t<sp/>table_id,<sp/>pagenum_t<sp/>leaf_page_idx,<sp/>int64_t<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHeaderPage" kindref="compound">headerpage_t</ref><sp/>header_page;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seperate_key_idx<sp/>=<sp/>99999;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left_sibling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>sibling_page_idx;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLeafPage" kindref="compound">leafpage_t</ref><sp/>leaf_page,<sp/>sibling_page;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>parent_page_idx;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structInternalPage" kindref="compound">internalpage_t</ref><sp/>parent_page;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>0,<sp/>&amp;header_page,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a46a6aea7dd6f29cd79ad905d94f748df" kindref="member">page_helper::remove_leaf_value</ref>(&amp;leaf_page,<sp/>key);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_page_idx<sp/>=<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaf_page_idx<sp/>==<sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1ga2f5536faf6de1e838865eb29fcf6b5bf" kindref="member">adjust_root</ref>(table_id);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>&lt;<sp/><ref refid="group__IndexManager_1gaeb24640d205c8fd9ec95cd0e8b99cc16" kindref="member">REDISTRIBUTE_THRESHOLD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1gad670dec3e27df044606af3c4282d97ba" kindref="member">buffered_release_page</ref>(table_id,<sp/>parent_page_idx);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leaf_page_idx;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=<sp/>*<ref refid="namespacepage__helper_1adaafa18748744e81f5abd5540207af63" kindref="member">page_helper::get_sibling_idx</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[i].<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref><sp/>==<sp/>sibling_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling_page_idx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;parent_page);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>2]</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_sibling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>sibling_page_idx,<sp/>&amp;sibling_page);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref><sp/>!=<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae7c89f892f8b4ab143a6e880fa216fa7" kindref="member">parent_page_idx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1ad8adbcd49de0f47797f74155ca978492" kindref="member">page_helper::get_leftmost_child_idx</ref>(&amp;parent_page);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seperate_key_idx<sp/>=<sp/>parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_page_idx<sp/>=</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[parent_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>2]</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageBranch_1a4a96cb8f228eccff326785565f60cf4b" kindref="member">page_idx</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_sibling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga14df3d77c93d5ed2718ec3d4ac4b8f67" kindref="member">buffered_read_page</ref>(table_id,<sp/>sibling_page_idx,<sp/>&amp;sibling_page);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>+<sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;sibling_page)<sp/>&gt;=<sp/><ref refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" kindref="member">PAGE_SIZE</ref><sp/>-<sp/><ref refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" kindref="member">PAGE_HEADER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_sibling)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" kindref="member">coalesce_leaf_nodes</ref>(table_id,<sp/>leaf_page_idx,<sp/>sibling_page_idx);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gaa90627d686fe08e70d44ca26b47be704" kindref="member">coalesce_leaf_nodes</ref>(table_id,<sp/>sibling_page_idx,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf_page_idx);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!left_sibling)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref><sp/>temp_slot;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>sibling_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;sibling_page);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>&gt;=</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__IndexManager_1gaeb24640d205c8fd9ec95cd0e8b99cc16" kindref="member">REDISTRIBUTE_THRESHOLD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;sibling_page,<sp/>0,<sp/>temp_value);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;leaf_page,<sp/>sibling_slot[0].key,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_value,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[0].value_size);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a46a6aea7dd6f29cd79ad905d94f748df" kindref="member">page_helper::remove_leaf_value</ref>(&amp;sibling_page,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[0].key);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>temp_value;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[seperate_key_idx].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[0].<ref refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;PageSlot,<sp/>const<sp/>char*&gt;&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>leaf_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPageSlot" kindref="compound">PageSlot</ref>*<sp/>sibling_slot<sp/>=<sp/><ref refid="namespacepage__helper_1aa8ddc40b0445e58446bee7702744feb6" kindref="member">page_helper::get_page_slot</ref>(&amp;sibling_page);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>temp_free_space<sp/>=<sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_free_space<sp/>&gt;=<sp/><ref refid="group__IndexManager_1gaeb24640d205c8fd9ec95cd0e8b99cc16" kindref="member">REDISTRIBUTE_THRESHOLD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sibling_page,<sp/>sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_value);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.emplace_back(</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1],</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_value);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_free_space<sp/>-=</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structPageSlot_1ae968301f8baa23e1c7c08876ee7a0b53" kindref="member">value_size</ref><sp/>+</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structPageSlot" kindref="compound">PageSlot</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a46a6aea7dd6f29cd79ad905d94f748df" kindref="member">page_helper::remove_leaf_value</ref>(</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sibling_page,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_slot[sibling_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>-<sp/>1].<ref refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::reverse(temp.begin(),<sp/>temp.end());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="group__IndexManager_1ga045d1d6a72dbad5612f98aa866b433f5" kindref="member">MAX_VALUE_SIZE</ref>];</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a156258314c74c8ccba98cc3372161b84" kindref="member">page_helper::get_leaf_value</ref>(&amp;leaf_page,<sp/>i,<sp/>temp_value);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.emplace_back(leaf_slot[i],<sp/>temp_value);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf_page.<ref refid="structAllocatedPage_1a6905d1bdddadea5b9d2603b254a3ae2c" kindref="member">page_header</ref>.<ref refid="structPageHeader_1ae8afd53dbd8e532f3cc78f848752e1b9" kindref="member">key_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacepage__helper_1a48eb82f7d2e7347c9abcb7a15f517bc7" kindref="member">page_helper::get_free_space</ref>(&amp;leaf_page)<sp/>=</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DiskSpaceManager_1ga02cae3c3ec7f57eeec642e2cade048f8" kindref="member">PAGE_SIZE</ref><sp/>-<sp/><ref refid="group__DiskSpaceManager_1ga5b2bd80e597442039a01fc8589e7f5ee" kindref="member">PAGE_HEADER_SIZE</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>temp_pair<sp/>:<sp/>temp)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepage__helper_1a3b88342bb43352d25c5bc0cb73bdd873" kindref="member">page_helper::add_leaf_value</ref>(&amp;leaf_page,<sp/>temp_pair.first.key,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pair.second,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_pair.first.value_size);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>temp_pair.second;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_page.<ref refid="structInternalPage_1a28bee8353c1552803f43534d4217ca57" kindref="member">page_branches</ref>[seperate_key_idx].<ref refid="structPageBranch_1a4fd447bb2fc5dcc00344ffb950be7050" kindref="member">key</ref><sp/>=<sp/>leaf_slot[0].<ref refid="structPageSlot_1ab133a4d483a0d718872413c37a9d8d79" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>leaf_page_idx,<sp/>&amp;leaf_page);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>sibling_page_idx,<sp/>&amp;sibling_page);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__BufferManager_1ga3813c4a6ac17833c7b130b82705fefea" kindref="member">buffered_write_page</ref>(table_id,<sp/>parent_page_idx,<sp/>&amp;parent_page);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_page.<ref refid="structHeaderPage_1a6fc50a9d30a94dfbdcbd313306a42823" kindref="member">root_page_idx</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="group__IndexManager_1ga157da10a1b39d539647c22ca891e1a92" refkind="member"><highlight class="normal">pagenum_t<sp/><ref refid="group__IndexManager_1ga157da10a1b39d539647c22ca891e1a92" kindref="member">delete_node</ref>(tableid_t<sp/>table_id,<sp/>int64_t<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>pagenum_t<sp/>leaf_page_idx<sp/>=<sp/><ref refid="group__IndexManager_1gac0f2308ff0a40de9b1a87c2f736fca70" kindref="member">find_leaf</ref>(table_id,<sp/>key);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__IndexManager_1gad65fca29eee4b34496d97c6d4e48b765" kindref="member">find_by_key</ref>(table_id,<sp/>key)<sp/>&amp;&amp;<sp/>leaf_page_idx)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__IndexManager_1gaa4595019e4f6ce843b6d2d44c44c3b1f" kindref="member">delete_leaf_key</ref>(table_id,<sp/>leaf_page_idx,<sp/>key);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//free(key_record);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/eliot/DBMS/2021_ite2038_2018008340/project3/db_project/db/src/tree.cc"/>
  </compounddef>
</doxygen>
